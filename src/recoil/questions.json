{
  "bf1.mp4": "Brute Force 알고리즘을 선택해야 하는 상황과 이 알고리즘의 단점에 대해 설명하고, 효율성이 중요한 문제 상황에서 Brute Force 대신 고려할 수 있는 다른 알고리즘 전략들은 무엇이 있는지 서술하시오.",
  "bf2.mp4": "Brute Force 접근 방식으로 정렬을 수행하는 Selection Sort와 Bubble Sort의 과정을 각각 상세히 설명하고, 두 알고리즘의 Time Efficiency에 대해 분석하시오. 또한, 큰 데이터셋에 대해 왜 이러한 정렬 방법이 권장되지 않는지에 대한 이유를 포함시켜 설명하시오.",
  "bf3.mp4": "Brute Force 알고리즘을 활용한 String Matching과 Sequential Search 기법의 개념과 이러한 방법이 선택되는 상황의 예를 설명하고, 각각의 방법의 효율성에 대해 논하시오.",
  "dp1.mp4": "다이나믹 프로그래밍을 사용하는 상황과 그 특징에 대해 설명하고, 예시를 들어 그 프로세스를 설명해 보세요. 더불어 'Longest Common Subsequence', 'Warshall Algorithm', 'Floyd’s Algorithm', 'Zero-One Knapsack Problem' 등에 대한 다이나믹 프로그래밍 접근법을 각각 설명하고, 이들 문제의 해결 과정에서 사용되는 점화식과 알고리즘의 시간 복잡도에 대해서도 간략히 설명해 주세요.",
  "dp2.mp4": "Longest Common Subsequence(LCS) 문제를 해결하기 위해 다이나믹 프로그래밍을 사용하는 과정에 대하여 설명하고, 어떻게 이 방법이 중복된 부분 문제들을 효율적으로 해결하는지 그리고 어떻게 서로 종속적인 부분 문제들이 결합하여 최종 문제를 해결하는지의 과정을 서술하시오. 또한, 이 경우에 다이나믹 프로그래밍이 왜 필요하며 어떻게 이를 통해 최적 부분 구조를 찾아내는지 예를 들어가며 자세히 설명하십시오.",
  "dp3.mp4": "워샬(Warshall) 알고리즘'을 사용하여 '트랜지티브 클로저(transitive closure)'를 구하는 과정을 설명하고, 주어진 방향 그래프(diagraph)에 대해 실제로 트랜지티브 클로저를 구하는 예를 들어 설명하시오. 추가로, 워샬 알고리즘의 적용 시 자기 자신으로의 경로(루프)를 0으로 설정하는 것과 1로 설정하는 것이 결과에 어떤 차이를 만드는지 분석하시오."
}
